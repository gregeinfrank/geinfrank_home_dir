;; Tell emacs where is your personal elisp lib dir
;; this is the dir you have the xyz.el file
(add-to-list 'load-path "~/.emacs.d/")

;; make sure that marked text is highlighted
(transient-mark-mode t)

;; follow symlinks to version controlled files without confirmation
(setq vc-follow-symlinks t)

;; Enable mouse support
(unless window-system
  (require 'mouse)
  (xterm-mouse-mode t)
  (global-set-key [mouse-4] '(lambda ()
                              (interactive)
                              (scroll-down 1)))
  (global-set-key [mouse-5] '(lambda ()
                              (interactive)
                              (scroll-up 1)))
  (defun track-mouse (e))
  (setq mouse-sel-mode t)
)

;; When a file has a hard link the backup file will be a copy as opposed to renaming the original file
(setq backup-by-copying-when-linked t) 

;; highlight column 80
(require 'fill-column-indicator)
(setq fci-rule-width 1)
(setq fci-rule-color "#000000")
(setq-default fci-rule-column 120)
(add-hook 'after-change-major-mode-hook 'fci-mode)

;; mouse support in osx terminal
(require 'mouse)
(xterm-mouse-mode t)
(defun track-mouse (e)) 
(setq mouse-sel-mode t)

;; enable kill ring to interact with osx clipboard. get pb copy from:
;; git clone git://gist.github.com/1023272.git gist-1023272
;; then copy pbcopy to .emacs.d
(require 'pbcopy)

;; javascript
(add-to-list 'auto-mode-alist '("\\.js\\'" . javascript-mode))
(autoload 'javascript-mode "javascript" nil t)

;; TRAMP
(require 'tramp)
(setq tramp-default-method "ssh")
(setq tramp-chunksize 127)

;; I like tabs of 4
(custom-set-variables '(tab-width 4))

;; tab key adds 4 characters
(setq default-tab-width 4)

;; use only spaces, no tab charaters
(setq-default indent-tabs-mode nil) 

;; font size for graphical displays
(set-face-attribute 'default nil :height 140)

;; line number mode
(require 'linum)
(global-linum-mode 1)
(setq linum-format "%d ")

;; Highlight current line
(global-hl-line-mode 1)
(set-face-attribute hl-line-face nil :underline "white" :background "black")

;; stop annoying me with the kill process on exit stuff
;; (defadvice save-buffers-kill-emacs (around no-query-kill-emacs activate)
;;   "Prevent annoying \"Active processes exist\" query when you quit Emacs."
;;   (flet ((process-list ())) ad-do-it))

;; save my desktop, and ignore some types of files, files are specified using regular expressions, \\ is needed to escape
(desktop-save-mode 1)
;; (setq desktop-buffers-not-to-save
;;      (concat "\\COMMIT_EDITMSG\\'"))

;; map some files to their mode
(add-to-list 'auto-mode-alist '("\\dot_emacs\\'" . emacs-lisp-mode))
(add-to-list 'auto-mode-alist '("\\dot_bash_profile\\'" . shell-script-mode))

;;
;; PYTHON STUFF
;;

(when (load "flymake" t)
  (defun flymake-pyflakes-init ()
    ;; Make sure it's not a remote buffer or flymake would not work
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
                       'flymake-create-temp-inplace))
           (local-file (file-relative-name
                        temp-file
                        (file-name-directory buffer-file-name))))
      ;; make sure to call pycheckers
      (list "~/.emacs.d/pycheckers.sh" (list local-file))))
  ;; only process python files
  (add-to-list 'flymake-allowed-file-name-masks
               '("\\.py\\'" flymake-pyflakes-init))
)
(add-hook 'find-file-hook 'flymake-find-file-hook)
;; make sure the working directory is the same as the temp file
(setq flymake-run-in-place nil)
(require 'flymake-cursor)
(setq flymake-log-level 3)
(global-set-key [f10] 'flymake-goto-prev-error)
(global-set-key [f11] 'flymake-goto-next-error)

;; no flymake for html
(delete '("\\.html?\\'" flymake-xml-init) flymake-allowed-file-name-masks)

;; AUTOCOMPLETE
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)

;; get magit in. But first download, then make, then make install
(require 'magit)







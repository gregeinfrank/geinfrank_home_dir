;; Tell emacs where is your personal elisp lib dir
;; this is the dir you have the xyz.el file
(add-to-list 'load-path "~/.emacs.d/")

;; make sure that marked text is highlighted
(transient-mark-mode t)

;; for osx, alt is alt and cmd is meta
;;(setq mac-option-key-is-meta nil)
;;(setq mac-command-key-is-meta t)
;;(setq mac-command-modifier 'meta)
;;(setq mac-option-modifier nil)

;; Enable mouse support
(unless window-system
  (require 'mouse)
  (xterm-mouse-mode t)
  (global-set-key [mouse-4] '(lambda ()
                              (interactive)
                              (scroll-down 1)))
  (global-set-key [mouse-5] '(lambda ()
                              (interactive)
                              (scroll-up 1)))
  (defun track-mouse (e))
  (setq mouse-sel-mode t)
)

;; When a file has a hard link the backup file will be a copy as opposed to renaming the original file
(setq backup-by-copying-when-linked t) 

;; highlight column 80
(require 'column-marker)
(add-hook 'foo-mode-hook (lambda () (interactive) (column-marker-1 80)))

;; mouse support in osx terminal
(require 'mouse)
(xterm-mouse-mode t)
(defun track-mouse (e)) 
(setq mouse-sel-mode t)

;; javascript
(add-to-list 'auto-mode-alist '("\\.js\\'" . javascript-mode))
(autoload 'javascript-mode "javascript" nil t)

;; (add-hook 'java-mode-hook 'setnu-mode)
;; (add-hook 'python-mode-hook 'setnu-mode)
;; (add-hook 'erlang-mode-hook 'setnu-mode)

;; TRAMP
(require 'tramp)
(setq tramp-default-method "ssh")
(setq tramp-chunksize 127)

(custom-set-variables
 '(tab-width 4))

;; font size
(set-face-attribute 'default nil :height 140)

;; line number mode
(require 'linum)
(global-linum-mode 1)

;; use only spaces, no tab charaters
(setq-default indent-tabs-mode nil) 

;; tab key adds 4 characters
(setq default-tab-width 4)

;; Highlight current line
(global-hl-line-mode 1)
(set-face-attribute hl-line-face nil :underline "white" :background "black")

;; stop annoying me with the kill process on exit stuff
(defadvice save-buffers-kill-emacs (around no-query-kill-emacs activate)
  "Prevent annoying \"Active processes exist\" query when you quit Emacs."
  (flet ((process-list ())) ad-do-it))

;; save my desktop, and ignore some types of files, files are specified using regular expressions, \\ is needed to escape
(desktop-save-mode 1)
;; (setq desktop-buffers-not-to-save
;;      (concat "\\COMMIT_EDITMSG\\'"))

;; add dot_emacs to emacs mode list
(add-to-list 'auto-mode-alist '("\\dot_emacs\\'" . emacs-lisp-mode))
(add-to-list 'auto-mode-alist '("\\dot_bash_profile\\'" . shell-script-mode))

;;
;; PYTHON STUFF
;;

(add-to-list 'auto-mode-alist '("\\.py\\'" . python-mode))

;; FLYMAKE for formatting and syntax problems
(add-to-list 'load-path "~/.emacs.d/vendor")

(add-hook 'find-file-hook 'flymake-find-file-hook)
(when (load "flymake" t)
  (defun flymake-pyflakes-init ()
    ;; Make sure it's not a remote buffer or flymake would not work
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
                       'flymake-create-temp-inplace))
           (local-file (file-relative-name
                        temp-file
                        (file-name-directory buffer-file-name))))
      ;; don't need the next line because it in included in pychecker
      ;;      (list "pyflakes" (list local-file))))        
      (list "~/.emacs.d/pycheckers.sh"  (list local-file))))
  (add-to-list 'flymake-allowed-file-name-masks
               '("\\.py\\'" flymake-pyflakes-init))
)
;; make sure the working directory is the same as the temp file
(setq flymake-run-in-place nil)
(load-library "flymake-cursor")
;; (setq flymake-log-level 3)
(global-set-key [f10] 'flymake-goto-prev-error)
(global-set-key [f11] 'flymake-goto-next-error)

;; no flymake for html
(delete '("\\.html?\\'" flymake-xml-init) flymake-allowed-file-name-masks)

;; AUTOCOMPLETE
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)